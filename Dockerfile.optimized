# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files first (better layer caching)
COPY package*.json ./
COPY tsconfig.json ./

# Install ALL dependencies for building
RUN npm ci

# Copy source code
COPY src/ ./src/

# Build the application
RUN npm run build

# Final stage - even more optimized
FROM node:18-alpine AS production

# Install only essential runtime dependencies
RUN apk add --no-cache git dumb-init

# Create non-root user (security best practice)
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Copy package files for production install
COPY package*.json ./

# Install only production dependencies (no scripts, no cache)
RUN npm ci --omit=dev --ignore-scripts && \
    npm cache clean --force && \
    rm -rf /tmp/*

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Set proper ownership and remove unnecessary files
RUN chown -R nodejs:nodejs /app && \
    rm -rf /root/.npm

# Switch to non-root user
USER nodejs

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/main.js"]
